import org.apache.tools.ant.filters.ReplaceTokens;

// didn't figure out yet how to use neither javax.sql.DataSource nor javax.sql.XADataSource => exclude those tests
unitTest.useJUnit {
      excludeCategories 'com.p6spy.engine.spy.DataSourceTests', 'com.p6spy.engine.spy.XADataSourceTests'
}

configurations {
  wls12xTestRuntime { extendsFrom testRuntime }
}

dependencies {
  wls12xTestRuntime "org.jboss.arquillian.container:arquillian-wls-remote-12.1:$libraryVersions.arquillian_wls"
}

String rootDir = "$buildDir/unpack/wls12"
String domainDir = "$rootDir/user_projects/domains/mydomain"
String serverDir = "$domainDir/servers/myserver"

task unpackContainer(type: Copy) {
  from { zipTree( downloadFile("https://www.dropbox.com/s/6spoe7ml1spqjmk/wls1213_dev.zip?dl=1")) }
  into 'build/unpack'
  
  doLast {
    ant.rename(src: 'build/unpack/wls12130', dest: 'build/unpack/wls12')
  }
}

task createDomain(dependsOn: unpackContainer) {
  doLast {
    //
    // fix script to prevent input to be requested
    //
    
    // patching script to work also in case no ANT_HOME provided
    ant.replace(
      file: "$rootDir/configure.sh",
      token: "# define some constants",
      value: "# define some constants\nSCRIPT_DIR=$rootDir"
      )
    
    // create domain [y]
    ant.replace(
      file: "$rootDir/configure.sh",
      token: 'read response',
      value: "response='y'"
      )
    // username=weblogic
    // password=weblogic123
    ant.replace(
      file: "$rootDir/configure.sh",
      token: '-Dweblogic.management.GenerateDefaultConfig=true',
      value: "-Dweblogic.management.GenerateDefaultConfig=true -Dweblogic.management.username=weblogic -Dweblogic.management.password=weblogic123"
      )
    // start in background
    ant.replace(
      file: "$rootDir/configure.sh",
      token: 'weblogic.Server',
      value: "weblogic.Server &"
      )
    
    // let's make to have stuff executable
    ant.chmod(
      dir: "$rootDir",
      includes: "configure.sh",
      perm: "+x"
      )

    //
    // start script
    //
    ant.exec(
      dir: rootDir,
      executable: './configure.sh'
      )
    {
      env(
        key: "CONFIG_JVM_ARGS",
        value: "-Djava.security.egd=file:/dev/./urandom"
        )
    }
    
    
    // it takes quite some time till wls boots, let's make sure we wait for it
    ant.waitfor(maxwait: "10", maxwaitunit: "minute") {
      socket (server: "localhost", port: "7001")
    }
    
    // stop once domain created + started correctly
    ant.exec(
      dir: domainDir + '/bin',
      executable: './stopWebLogic.sh'
      )
  } 
}

task deployJars(type: Copy, dependsOn: createDomain) {
  from configurations.p6spyAll
  into domainDir + "/lib"
}

task copyConfig(type: Copy, dependsOn: deployJars) {
  from "$buildDir/../src/test/config/spy.properties"
  into domainDir
  filter(ReplaceTokens, tokens: [logDir: buildDir.getAbsolutePath()])
}

task startContainer(dependsOn: copyConfig ) {
  doLast {
    ant.exec(
      dir: "$domainDir/bin",
      spawn: true,
      executable: './startWebLogic.sh'
    )
    
    // it takes quite some time till wls boots, let's make sure we wait for it
    ant.waitfor(maxwait: "2", maxwaitunit: "minute") {
      socket (server: "localhost", port: "7001")
    }
  }
}

task stopContainer(type:Exec, dependsOn: startContainer) {
  workingDir domainDir + '/bin'
  commandLine 'bash', '-e', './stopWebLogic.sh'
}

task createH2ConnectionPoolDataSourceS1(dependsOn:startContainer) {
  doLast {
    ant.exec(
      dir: "$domainDir/bin",
      spawn: false,
      executable: '/bin/sh'
      )
    {
      arg(value: "-c")
      arg(value: "source $domainDir/bin/setDomainEnv.sh && java weblogic.WLST $rootDir/../../../script/travis/wls12x_ds.py 'h2ConnectionPoolDataSourceS1' 'jdbc/h2ConnectionPoolDataSourceS1' 'org.h2.jdbcx.JdbcDataSource' 'jdbc:h2:tcp://localhost:9091//home/peterb/all/prg/oss/p6spy-it/build/h2/s1/test1'")
    }
  }
}

task createP6SpyDriverS1(dependsOn:createH2ConnectionPoolDataSourceS1) {
  doLast {
    ant.exec(
      dir: "$domainDir/bin",
      spawn: false,
      executable: '/bin/sh'
      )
    {
      arg(value: "-c")
      arg(value: "source $domainDir/bin/setDomainEnv.sh && java weblogic.WLST $rootDir/../../../script/travis/wls12x_ds.py 'p6SpyDriverS1' 'jdbc/p6SpyDriverS1' 'com.p6spy.engine.spy.P6SpyDriver' 'jdbc:p6spy:h2:tcp://localhost:9091//home/peterb/all/prg/oss/p6spy-it/build/h2/s1/test3'")
    }
  }
}

startContainer.finalizedBy createP6SpyDriverS1
